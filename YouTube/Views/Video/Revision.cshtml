@using Core.Interfaces
@model Core.Dtos.VideoDto
@inject ILikeService likeService
@inject IUserService userService
@inject ISubscriberService subscriberService
@inject ICommentService commentService

@{
    ViewData["Title"] = "Video Revision";
    var user = ViewData["User"] as Core.Dtos.UserDto;
    var videoId = Model.Id.Value;
    var likeCount = likeService.CountLikes(videoId);
    var authorShortInfo = userService.GetShortUser(Model.UserId);
    var comments = commentService.GetCommentDtos(videoId);
    var isSubscribed = user != null && subscriberService.IsSubscribed(user.Id, Model.UserId);
}

<div class="video-container">
    <h2>@Model.Title</h2>

    <!-- Video Player -->
    <div class="video-player">
        <iframe width="100%" height="500" src="@Model.VideoUrl" frameborder="0" allowfullscreen></iframe>
    </div>

    <!-- Video Description -->
    <div class="video-details">
        <div class="video-meta">
            <p>@Model.DateOfPublication.ToString("MMMM dd, yyyy")</p>
            <p>@Model.Description</p>
        </div>
        <div class="video-actions">
            <form asp-controller="Like" asp-action="AddOrRemoveLike" asp-route-idVideo="@Model.Id" method="post">
                <button type="submit" class="btn-like">👍 Like (@likeCount)</button>
            </form>

        </div>
    </div>

    <!-- Author Info -->
    <div class="author-info">
        <img src="@authorShortInfo.AvatarUrl" alt="Avatar" class="author-avatar" />
        <div class="author-details">
            <p>@authorShortInfo.Nickname</p>
            <p>@subscriberService.CountSubscriber(authorShortInfo.Id) subscribers</p>
            <form asp-controller="Subscriber" asp-action="ToggleSubscription" asp-route-idUser="@user.Id" asp-route-idVideo="@Model.Id" method="post">
                <input type="hidden" name="idAuthor" value="@Model.UserId" />
                <button type="submit" class="btn-subscribe">
                    @(isSubscribed ? "Unsubscribe" : "Subscribe")
                </button>
            </form>
        </div>
    </div>
</div>

    <!-- Comments Section -->
    <div class="comments-section">
        <h3>Comments</h3>
        <form asp-controller="Comment" asp-action="AddComment" asp method="post" class="add-comment-form">
            <input type="hidden" name="VideoId" value="@Model.Id" />
            <textarea name="CommentText" placeholder="Add a comment..." class="comment-input"></textarea>
            <button type="submit" class="btn-post-comment">Post Comment</button>
        </form>
        <div class="comments-list">
            @foreach (var comment in comments)
            {
                var commentator = userService.GetUserDto(comment.IdCommentator);
                <div class="comment">
                    <p><strong>@commentator.Nickname:</strong> @comment.TextComment</p>
                    <p class="comment-date">@comment.DateOfPublication.ToString("MMMM dd, yyyy")</p>
                </div>
            }
        </div>
    </div>

    <div class="back-to-home">
        <a href="@Url.Action("Index", "Home")" class="btn-back-home">Back to Home</a>
    </div>
</div>